info:
  component: This is REST API for Study Buddy application.
  app:
    name: ${app.name}
    description: This is REST API for Study Buddy application.
    version: ${app.version}

server:
  port: 8080
  contextPath: /api/

spring:
  application:
    name: studyit-api
  datasource:
    url: jdbc:mariadb://${db.hostname}/${db.schema}?autoReconnect=true
    username: ${db.username}
    password: ${db.password}
  jpa:
    database-platform: ${db.platform}
    properties:
      org:
        hibernate:
          envers:
            audit_table_suffix: _tt
      hibernate:
        dialect: ${db.hibernate.dialect}
        default_schema: ${db.schema}
    show-sql: ${db.show.sql}
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: none
      format-sql: true
  bus:
    amqp:
      exchange: ${rabbitmq.exchange.name}
      enabled: true
  rabbitmq:
    host: ${rabbitmq.host}
    port: ${rabbitmq.port}
    username: ${rabbitmq.username}
    password: ${rabbitmq.password}
  social:
    facebook:
      appId: ${facebook.appId}
      appSecret: ${facebook.appSecret}
    google:
      appId: ${google.appId}
      appSecret: ${google.appSecret}
    linkedin:
      appId: ${linkedin.appId}
      appSecret: ${linkedin.appSecret}
  flyway:
    enabled: true
    locations: "classpath:db/migration"
    baseline-on-migrate: false
    clean-on-validation-error: false
    schemas: ${db.schema}

hystrix:
  streamEnabled: true
  enabled: true

archaius:
  dynamicPropertyFactory:
    registerConfigWithJMX: true

validator:
  api:
    company:
      url: ${company.url.prefix}
      key: ${company.api.key}
    vat:
      url: ${vat.url.prefix}

mail:
  api:
    url: ${mail.api.url}
    token: ${mail.api.auth.token}
management:
  context-path: /actuator
  security:
    enabled: true

security:
  oauth2:
    resourceId: marketplace-api
    clientId: ${oauth2.resource.clientId}
    clientSecret: ${oauth2.resource.clientSecret}
    tokenEndpoint: ${oauth2.check.token.endpoint}
    authzEndpoint: ${oauth2.authorize.endpoint}
  user:
    name: ${security.user.name}
    password: ${security.user.password}
    role: ACTUATOR

logging:
  level:
    root: INFO
  file: logs/${spring.application.name}.log